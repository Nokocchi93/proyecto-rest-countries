{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/filter.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/countries-grid/countries-grid.component.ts","./src/app/components/countries-grid/countries-grid.component.html","./src/app/search-filters/search-filters.component.ts","./src/app/search-filters/search-filters.component.html","./src/app/model/country.model.ts","./src/app/country-details/country-details.component.ts","./src/app/country-details/country-details.component.html","./src/app/services/country.service.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/components/country-card/country-card.component.ts","./src/app/components/country-card/country-card.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterService {\n  nameSearch = new BehaviorSubject<string>('');\n  majorRegionSelect = new BehaviorSubject<string>('');\n  orderSelect = new BehaviorSubject<string>('');\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'proyecto-rest-countries';\n}\n","<h1 class=\"title\">COUNTRIES APP</h1>\n<router-outlet></router-outlet>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Country } from 'src/app/model/country.model';\nimport { CountryService } from 'src/app/services/country.service';\nimport { FilterService } from 'src/app/services/filter.service';\nimport { combineLatest, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-countries-grid',\n  templateUrl: './countries-grid.component.html',\n  styleUrls: ['./countries-grid.component.scss'],\n})\nexport class CountriesGridComponent implements OnInit, OnDestroy {\n  countries: Country[];\n  subscription: Subscription;\n\n  constructor(\n    private countryService: CountryService,\n    private filterService: FilterService\n    ) {}\n\n  ngOnInit(): void {\n    this.subscription = combineLatest([\n      this.countryService.getCountries(),\n      this.filterService.nameSearch,\n      this.filterService.majorRegionSelect,\n      this.filterService.orderSelect,\n    ]).subscribe(([countries, name, majorRegion, order]) => {\n      this.countries = countries\n        .filter((c) => this.filterByName(c, name))\n        .filter((c) => this.filterByMajorRegion(c, majorRegion))\n        .sort((a, b) => this.sortCountries(a, b, order));\n    });\n  }\n\n  filterByName(country: Country, name: string): boolean {\n    return country.name.common.toLowerCase().includes(name.toLowerCase());\n  }\n\n  filterByMajorRegion(country: Country, region: string): boolean {\n    return region ? country.region === region : true;\n  }\n\n  sortCountries(a: Country, b: Country, order: string): number {\n    if (order === 'AZ' || order === 'ZA') {\n      return this.sortCustom(a.name.common, b.name.common, order);\n    }\n\n    if (order === 'LtG' || order === 'GtL') {\n      return this.sortCustom(a.population, b.population, order);\n    }\n  }\n\n  sortCustom(a: number | string, b: number | string, order: string): number {\n\n    if (order === 'AZ' || order === 'LtG') {\n      if (a < b) {\n        return -1;\n      }\n\n      if (a > b) {\n        return 1;\n      }\n    }\n\n    if (order === 'ZA' || order === 'GtL') {\n      if (a < b) {\n        return 1;\n      }\n\n      if (a > b) {\n        return -1;\n      }\n    }\n\n    return 0;\n  }\n\n  ngOnDestroy(): void {\n    this.filterService.nameSearch.next('');\n    this.filterService.majorRegionSelect.next('');\n    this.filterService.orderSelect.next('');\n    this.subscription.unsubscribe();\n  }\n}\n","<app-search-filters></app-search-filters>\n<div class=\"card-container\">\n  <app-country-card *ngFor=\"let country of countries\" [country]=\"country\"></app-country-card>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { MajorRegions } from '../model/country.model';\nimport { FilterService } from '../services/filter.service';\n\n@Component({\n  selector: 'app-search-filters',\n  templateUrl: './search-filters.component.html',\n  styleUrls: ['./search-filters.component.scss']\n})\nexport class SearchFiltersComponent implements OnInit {\n  majorRegions = [\n    MajorRegions.Africa,\n    MajorRegions.Americas,\n    MajorRegions.Asia,\n    MajorRegions.Europe,\n    MajorRegions.Oceania,\n  ];\n  searchInput = new FormControl('');\n  majorRegionsSelect = new FormControl('');\n  orderSelect = new FormControl('');\n  searchInputSub: Subscription;\n\n  constructor(private filterService: FilterService) {}\n\n  ngOnInit(): void {\n    this.searchInput.valueChanges.subscribe((value) =>\n      this.filterService.nameSearch.next(value)\n    );\n\n    this.majorRegionsSelect.valueChanges.subscribe((value) =>\n      this.filterService.majorRegionSelect.next(value)\n    );\n\n    this.orderSelect.valueChanges.subscribe((value) =>\n      this.filterService.orderSelect.next(value)\n    );\n  }\n\n  toggleTheme(): void {\n    document.body.classList.toggle('dark-theme');\n  }\n}\n","<div class=\"container\">\n  <div>\n    <label for=\"search\">Search by country name:</label>\n    <input id=\"search\" name=\"search\" type=\"text\" [formControl]=\"searchInput\" />\n  </div>\n\n  <div>\n    <label for=\"major-region-sel\">Search by major region:</label>\n    <select name=\"major-regin-sel\" [formControl]=\"majorRegionsSelect\">\n      <option selected value=\"\">All regions</option>\n      <option *ngFor=\"let region of majorRegions\" value=\"{{ region }}\">{{ region }}</option>\n    </select>\n  </div>\n\n  <div>\n    <label for=\"order-sel\">Sort countries:</label>\n    <select name=\"order-sel\" [formControl]=\"orderSelect\">\n      <option selected value=\"\">Default order</option>\n      <option value=\"AZ\">From A to Z</option>\n      <option value=\"ZA\">From Z to A</option>\n      <option value=\"LtG\">Lower to Greater pop</option>\n      <option value=\"GtL\">Greater to Lower pop</option>\n    </select>\n  </div>\n\n  <button (click)=\"toggleTheme()\">Toggle theme</button>\n</div>\n\n","export interface Country {\n  name?: {\n    common?: string;\n    official?: string;\n    nativeName?: any;\n  };\n  currencies?: any;\n  capital?: string[];\n  borders?: string[];\n  population?: number;\n  flags?: {\n    png?: string;\n    svg?: string;\n  };\n  region?: string;\n  subregion?: string;\n  independent?: boolean;\n  unMember?: boolean;\n  area?: number;\n}\n\nexport enum MajorRegions {\n  Africa = 'Africa',\n  Americas = 'Americas',\n  Asia = 'Asia',\n  Europe = 'Europe',\n  Oceania = 'Oceania',\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Country } from '../model/country.model';\nimport { CountryService } from '../services/country.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-country-details',\n  templateUrl: './country-details.component.html',\n  styleUrls: ['./country-details.component.scss'],\n})\nexport class CountryDetailsComponent implements OnInit {\n  country: Country;\n  borderCountries: Country[] = [];\n\n  constructor(private route: ActivatedRoute, private countryService: CountryService) { }\n\n  ngOnInit(): void {\n    this.route.params.pipe(\n      switchMap(params => this.countryService.getCountry(params.name))\n    ).subscribe(c => {\n      this.setCountry(c);\n    });\n  }\n\n  setCountry(c: Country): void {\n    console.log(c);\n    this.country = c;\n    this.borderCountries = [];\n    this.getBorderCountries();\n  }\n\n  getBorderCountries(): void {\n    if (this.country[0].borders) {\n      this.country[0].borders.forEach(c => {\n        this.countryService.getCountryByCode(c.toLowerCase()).subscribe(c => {\n          this.borderCountries.push(c[0]);\n        });\n      });\n    }\n  }\n}\n","<div *ngIf=\"country\">\n  <button class=\"back-btn\" type=\"button\" routerLink=\"/\">&larr; back</button>\n  <div class=\"details\">\n    <img\n    [src]=\"country[0].flags.png\"\n    [alt]=\"country[0].name.common\"\n    width=\"320\"\n    height=\"170\"\n    />\n    <div class=\"info\">\n      <h2>{{ country[0].name.common | uppercase }}</h2>\n      <p><strong>Capital: </strong>{{ country[0].capital[0] }}</p>\n      <p><strong>Population: </strong>{{ country[0].population }}</p>\n      <p><strong>Region: </strong>{{ country[0].region }}</p>\n      <p><strong>Subregion: </strong>{{ country[0].subregion }}</p>\n      <p><strong>Is independent: </strong>{{ country[0].independent ? 'yes' : 'no' }}</p>\n      <p><strong>Is UN member: </strong>{{ country[0].unMember ? 'yes' : 'no' }}</p>\n      <p><strong>Area: </strong>{{ country[0].area }}km<sup>2</sup></p>\n    </div>\n  </div>\n  <div class=\"border-countries\" *ngIf=\"borderCountries.length > 0\">\n    <h2>Border countries</h2>\n    <div class=\"card-container\">\n      <app-country-card *ngFor=\"let country of borderCountries\" [country]=\"country\"></app-country-card>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Country } from '../model/country.model';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CountryService {\n  private restCountriesUrl = 'https://restcountries.com/v3.1';\n\n  constructor(private http: HttpClient) {}\n\n  getCountries(): Observable<Country[]> {\n    return this.http.get<Country[]>(`${this.restCountriesUrl}/all`);\n  }\n\n  getCountry(name: string): Observable<Country> {\n    return this.http.get<Country>(`${this.restCountriesUrl}/name/${name}?fullText=true`);\n  }\n\n  getCountryByCode(code: string): Observable<Country> {\n    return this.http.get<Country>(`${this.restCountriesUrl}/alpha/${code}`);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CountryCardComponent } from './components/country-card/country-card.component';\nimport { CountriesGridComponent } from './components/countries-grid/countries-grid.component';\nimport { CountryDetailsComponent } from './country-details/country-details.component';\nimport { SearchFiltersComponent } from './search-filters/search-filters.component';\n\n@NgModule({\n  declarations: [AppComponent, CountryCardComponent, CountriesGridComponent, CountryDetailsComponent, SearchFiltersComponent],\n  imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CountriesGridComponent } from './components/countries-grid/countries-grid.component';\nimport { CountryDetailsComponent } from './country-details/country-details.component';\n\nconst routes: Routes = [\n  { path: 'details/:name', component: CountryDetailsComponent },\n  { path: '', component: CountriesGridComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, Input, OnInit } from '@angular/core';\nimport { Country } from '../../model/country.model';\n\n@Component({\n  selector: 'app-country-card',\n  templateUrl: './country-card.component.html',\n  styleUrls: ['./country-card.component.scss'],\n})\nexport class CountryCardComponent {\n  @Input() country: Country;\n}\n","<div routerLink=\"/details/{{ country.name.common }}\">\n    <img\n      [src]=\"country.flags.png\"\n      [alt]=\"country.name.common\"\n      width=\"320\"\n      height=\"170\"\n    />\n    <div class=\"info\">\n      <strong>{{ country.name.common | uppercase }}</strong>\n      <span *ngIf=\"country.capital\"><strong>Capital: </strong>{{ country.capital[0] }}</span>\n      <span><strong>Population: </strong>{{ country.population }}</span>\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}